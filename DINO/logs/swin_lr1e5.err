nohup: ignoring input
Downloading...
From (uriginal): https://drive.google.com/uc?export=download&id=1CrzFP0RycSC24KKmF5k0libLRJgpX9x0
From (redirected): https://drive.google.com/uc?export=download&id=1CrzFP0RycSC24KKmF5k0libLRJgpX9x0&confirm=t&uuid=b86377b8-d17a-4402-92fd-e263c2467384
To: /tmp2/irisqiu0106/CVPDL-HW1/DINO/logs/swin_lr1e5/checkpoint0029_4scale_swin.pth
  0%|          | 0.00/2.61G [00:00<?, ?B/s]  0%|          | 7.34M/2.61G [00:00<00:36, 70.6MB/s]  1%|          | 14.7M/2.61G [00:00<00:41, 62.4MB/s]  1%|          | 21.5M/2.61G [00:00<00:43, 59.1MB/s]  1%|          | 28.8M/2.61G [00:00<00:40, 63.4MB/s]  1%|▏         | 35.7M/2.61G [00:00<00:45, 56.4MB/s]  2%|▏         | 42.5M/2.61G [00:00<01:04, 40.1MB/s]  2%|▏         | 50.9M/2.61G [00:01<00:57, 44.3MB/s]  2%|▏         | 59.2M/2.61G [00:01<01:05, 39.0MB/s]  3%|▎         | 67.6M/2.61G [00:01<01:07, 37.7MB/s]  3%|▎         | 76.0M/2.61G [00:01<00:57, 44.1MB/s]  3%|▎         | 84.4M/2.61G [00:01<00:51, 48.6MB/s]  4%|▎         | 93.8M/2.61G [00:01<00:43, 57.9MB/s]  4%|▍         | 101M/2.61G [00:02<00:51, 49.0MB/s]   4%|▍         | 110M/2.61G [00:02<00:54, 45.7MB/s]  5%|▍         | 118M/2.61G [00:02<00:51, 48.8MB/s]  5%|▍         | 126M/2.61G [00:02<00:46, 53.7MB/s]  5%|▌         | 135M/2.61G [00:02<00:46, 52.8MB/s]  5%|▌         | 143M/2.61G [00:02<00:43, 56.3MB/s]  6%|▌         | 152M/2.61G [00:03<00:43, 56.3MB/s]  6%|▌         | 160M/2.61G [00:03<00:42, 57.7MB/s]  7%|▋         | 171M/2.61G [00:03<00:34, 70.7MB/s]  7%|▋         | 182M/2.61G [00:03<00:30, 80.2MB/s]  7%|▋         | 191M/2.61G [00:03<00:30, 79.0MB/s]  8%|▊         | 200M/2.61G [00:03<00:30, 78.7MB/s]  8%|▊         | 208M/2.61G [00:03<00:42, 56.3MB/s]  8%|▊         | 219M/2.61G [00:04<00:49, 48.0MB/s]  9%|▉         | 229M/2.61G [00:04<00:41, 57.2MB/s]  9%|▉         | 236M/2.61G [00:04<00:48, 49.2MB/s]  9%|▉         | 248M/2.61G [00:04<00:37, 62.7MB/s] 10%|▉         | 256M/2.61G [00:04<00:44, 52.7MB/s] 10%|█         | 263M/2.61G [00:04<00:52, 45.0MB/s] 10%|█         | 271M/2.61G [00:05<00:46, 50.6MB/s] 11%|█         | 277M/2.61G [00:05<00:49, 47.6MB/s] 11%|█         | 284M/2.61G [00:05<00:44, 51.8MB/s] 11%|█         | 290M/2.61G [00:05<00:43, 53.8MB/s] 11%|█▏        | 296M/2.61G [00:05<00:49, 46.5MB/s] 12%|█▏        | 303M/2.61G [00:05<00:47, 48.3MB/s] 12%|█▏        | 311M/2.61G [00:05<00:50, 45.9MB/s] 12%|█▏        | 321M/2.61G [00:06<00:39, 58.4MB/s] 13%|█▎        | 328M/2.61G [00:06<00:45, 49.9MB/s] 13%|█▎        | 337M/2.61G [00:06<00:40, 56.7MB/s] 13%|█▎        | 344M/2.61G [00:06<00:42, 53.2MB/s] 14%|█▎        | 353M/2.61G [00:06<00:42, 53.1MB/s] 14%|█▍        | 361M/2.61G [00:06<00:38, 57.9MB/s] 14%|█▍        | 370M/2.61G [00:06<00:43, 51.7MB/s] 15%|█▍        | 382M/2.61G [00:07<00:33, 66.0MB/s] 15%|█▍        | 390M/2.61G [00:07<00:44, 50.3MB/s] 15%|█▌        | 396M/2.61G [00:07<00:47, 47.0MB/s] 16%|█▌        | 407M/2.61G [00:07<00:37, 59.1MB/s] 16%|█▌        | 419M/2.61G [00:07<00:30, 72.2MB/s] 16%|█▋        | 428M/2.61G [00:07<00:30, 72.2MB/s] 17%|█▋        | 436M/2.61G [00:08<00:39, 54.9MB/s] 17%|█▋        | 447M/2.61G [00:08<00:32, 65.7MB/s] 17%|█▋        | 456M/2.61G [00:08<00:37, 57.1MB/s] 18%|█▊        | 466M/2.61G [00:08<00:32, 65.9MB/s] 18%|█▊        | 477M/2.61G [00:08<00:27, 76.8MB/s] 19%|█▊        | 489M/2.61G [00:08<00:24, 86.2MB/s] 19%|█▉        | 501M/2.61G [00:08<00:22, 94.4MB/s] 20%|█▉        | 511M/2.61G [00:08<00:21, 96.4MB/s] 20%|█▉        | 522M/2.61G [00:09<00:22, 93.8MB/s] 20%|██        | 532M/2.61G [00:09<00:21, 96.4MB/s] 21%|██        | 542M/2.61G [00:09<00:32, 64.3MB/s] 21%|██        | 554M/2.61G [00:09<00:41, 50.0MB/s] 22%|██▏       | 566M/2.61G [00:09<00:33, 61.2MB/s] 22%|██▏       | 575M/2.61G [00:09<00:31, 64.2MB/s] 22%|██▏       | 585M/2.61G [00:10<00:28, 72.1MB/s] 23%|██▎       | 597M/2.61G [00:10<00:24, 82.7MB/s] 23%|██▎       | 609M/2.61G [00:10<00:21, 91.3MB/s] 24%|██▍       | 621M/2.61G [00:10<00:20, 98.0MB/s] 24%|██▍       | 633M/2.61G [00:10<00:19, 103MB/s]  25%|██▍       | 645M/2.61G [00:10<00:18, 107MB/s] 25%|██▌       | 657M/2.61G [00:10<00:17, 110MB/s] 26%|██▌       | 670M/2.61G [00:10<00:18, 107MB/s] 26%|██▌       | 681M/2.61G [00:10<00:18, 106MB/s] 27%|██▋       | 693M/2.61G [00:11<00:17, 109MB/s] 27%|██▋       | 705M/2.61G [00:11<00:17, 112MB/s] 27%|██▋       | 717M/2.61G [00:11<00:16, 113MB/s] 28%|██▊       | 728M/2.61G [00:11<00:16, 113MB/s] 28%|██▊       | 740M/2.61G [00:11<00:16, 113MB/s] 29%|██▉       | 751M/2.61G [00:11<00:16, 113MB/s] 29%|██▉       | 763M/2.61G [00:11<00:18, 101MB/s] 30%|██▉       | 774M/2.61G [00:11<00:17, 104MB/s] 30%|███       | 785M/2.61G [00:11<00:17, 106MB/s] 30%|███       | 796M/2.61G [00:11<00:17, 104MB/s] 31%|███       | 807M/2.61G [00:12<00:17, 105MB/s] 31%|███▏      | 818M/2.61G [00:12<00:21, 82.3MB/s] 32%|███▏      | 828M/2.61G [00:12<00:21, 84.1MB/s] 32%|███▏      | 840M/2.61G [00:12<00:19, 92.5MB/s] 33%|███▎      | 852M/2.61G [00:12<00:17, 99.2MB/s] 33%|███▎      | 862M/2.61G [00:12<00:18, 97.1MB/s] 33%|███▎      | 874M/2.61G [00:12<00:17, 101MB/s]  34%|███▍      | 885M/2.61G [00:12<00:16, 103MB/s] 34%|███▍      | 897M/2.61G [00:13<00:16, 107MB/s] 35%|███▍      | 909M/2.61G [00:13<00:15, 110MB/s] 35%|███▌      | 921M/2.61G [00:13<00:15, 112MB/s] 36%|███▌      | 933M/2.61G [00:13<00:14, 114MB/s] 36%|███▌      | 945M/2.61G [00:13<00:14, 115MB/s] 37%|███▋      | 957M/2.61G [00:13<00:14, 115MB/s] 37%|███▋      | 969M/2.61G [00:13<00:14, 116MB/s] 38%|███▊      | 981M/2.61G [00:13<00:14, 116MB/s] 38%|███▊      | 994M/2.61G [00:13<00:13, 117MB/s] 39%|███▊      | 1.01G/2.61G [00:13<00:13, 116MB/s] 39%|███▉      | 1.02G/2.61G [00:14<00:24, 64.0MB/s] 39%|███▉      | 1.03G/2.61G [00:14<00:29, 54.3MB/s] 40%|███▉      | 1.03G/2.61G [00:14<00:26, 58.4MB/s] 40%|███▉      | 1.04G/2.61G [00:14<00:30, 51.0MB/s] 40%|████      | 1.05G/2.61G [00:15<00:34, 45.4MB/s] 40%|████      | 1.06G/2.61G [00:15<00:30, 50.8MB/s] 41%|████      | 1.07G/2.61G [00:15<00:35, 43.5MB/s] 41%|████      | 1.07G/2.61G [00:15<00:34, 44.3MB/s] 41%|████▏     | 1.08G/2.61G [00:15<00:39, 38.4MB/s] 42%|████▏     | 1.09G/2.61G [00:16<00:34, 44.6MB/s] 42%|████▏     | 1.10G/2.61G [00:16<00:42, 35.5MB/s] 42%|████▏     | 1.11G/2.61G [00:16<00:33, 44.3MB/s] 43%|████▎     | 1.12G/2.61G [00:16<00:41, 36.4MB/s] 43%|████▎     | 1.13G/2.61G [00:16<00:29, 49.5MB/s] 43%|████▎     | 1.14G/2.61G [00:17<00:33, 44.0MB/s] 44%|████▎     | 1.14G/2.61G [00:17<00:31, 46.3MB/s] 44%|████▍     | 1.15G/2.61G [00:17<00:35, 40.7MB/s] 44%|████▍     | 1.16G/2.61G [00:17<00:31, 46.0MB/s] 45%|████▍     | 1.17G/2.61G [00:17<00:32, 44.5MB/s] 45%|████▍     | 1.17G/2.61G [00:17<00:27, 51.4MB/s] 45%|████▌     | 1.18G/2.61G [00:18<00:31, 44.6MB/s] 46%|████▌     | 1.19G/2.61G [00:18<00:29, 48.2MB/s] 46%|████▌     | 1.20G/2.61G [00:18<00:33, 42.7MB/s] 46%|████▌     | 1.21G/2.61G [00:18<00:31, 45.0MB/s] 47%|████▋     | 1.22G/2.61G [00:18<00:23, 59.1MB/s] 47%|████▋     | 1.23G/2.61G [00:18<00:19, 72.4MB/s] 48%|████▊     | 1.24G/2.61G [00:18<00:16, 83.5MB/s] 48%|████▊     | 1.25G/2.61G [00:19<00:16, 84.5MB/s] 48%|████▊     | 1.26G/2.61G [00:19<00:14, 93.4MB/s] 49%|████▉     | 1.28G/2.61G [00:19<00:13, 98.6MB/s] 49%|████▉     | 1.29G/2.61G [00:19<00:14, 94.3MB/s] 50%|████▉     | 1.30G/2.61G [00:19<00:13, 99.2MB/s] 50%|█████     | 1.31G/2.61G [00:19<00:12, 103MB/s]  51%|█████     | 1.32G/2.61G [00:19<00:12, 107MB/s] 51%|█████     | 1.33G/2.61G [00:19<00:11, 110MB/s] 51%|█████▏    | 1.34G/2.61G [00:19<00:11, 112MB/s] 52%|█████▏    | 1.36G/2.61G [00:20<00:11, 112MB/s] 52%|█████▏    | 1.37G/2.61G [00:20<00:10, 113MB/s] 53%|█████▎    | 1.38G/2.61G [00:20<00:11, 105MB/s] 53%|█████▎    | 1.39G/2.61G [00:20<00:11, 107MB/s] 54%|█████▎    | 1.40G/2.61G [00:20<00:11, 108MB/s] 54%|█████▍    | 1.41G/2.61G [00:20<00:12, 98.0MB/s] 55%|█████▍    | 1.42G/2.61G [00:20<00:13, 91.0MB/s] 55%|█████▍    | 1.44G/2.61G [00:20<00:12, 96.5MB/s] 55%|█████▌    | 1.45G/2.61G [00:20<00:12, 95.9MB/s] 56%|█████▌    | 1.46G/2.61G [00:21<00:11, 101MB/s]  56%|█████▌    | 1.47G/2.61G [00:21<00:13, 85.4MB/s] 57%|█████▋    | 1.48G/2.61G [00:21<00:12, 90.8MB/s] 57%|█████▋    | 1.49G/2.61G [00:21<00:11, 96.1MB/s] 57%|█████▋    | 1.50G/2.61G [00:21<00:14, 77.8MB/s] 58%|█████▊    | 1.51G/2.61G [00:21<00:13, 82.4MB/s] 58%|█████▊    | 1.52G/2.61G [00:21<00:13, 82.9MB/s] 59%|█████▊    | 1.53G/2.61G [00:21<00:11, 91.9MB/s] 59%|█████▉    | 1.54G/2.61G [00:22<00:15, 68.6MB/s] 60%|█████▉    | 1.56G/2.61G [00:22<00:13, 79.0MB/s] 60%|█████▉    | 1.57G/2.61G [00:22<00:13, 78.4MB/s] 60%|██████    | 1.58G/2.61G [00:22<00:12, 83.4MB/s] 61%|██████    | 1.59G/2.61G [00:22<00:14, 68.8MB/s] 61%|██████    | 1.60G/2.61G [00:22<00:12, 79.8MB/s] 62%|██████▏   | 1.61G/2.61G [00:22<00:11, 85.1MB/s] 62%|██████▏   | 1.62G/2.61G [00:23<00:11, 87.2MB/s] 62%|██████▏   | 1.63G/2.61G [00:23<00:10, 90.8MB/s] 63%|██████▎   | 1.64G/2.61G [00:23<00:10, 91.2MB/s] 63%|██████▎   | 1.65G/2.61G [00:23<00:10, 95.6MB/s] 64%|██████▎   | 1.66G/2.61G [00:23<00:09, 102MB/s]  64%|██████▍   | 1.67G/2.61G [00:23<00:08, 106MB/s] 64%|██████▍   | 1.68G/2.61G [00:23<00:09, 99.2MB/s] 65%|██████▍   | 1.70G/2.61G [00:23<00:08, 102MB/s]  65%|██████▌   | 1.71G/2.61G [00:23<00:08, 105MB/s] 66%|██████▌   | 1.72G/2.61G [00:24<00:08, 110MB/s] 66%|██████▋   | 1.73G/2.61G [00:24<00:07, 112MB/s] 67%|██████▋   | 1.74G/2.61G [00:24<00:07, 114MB/s] 67%|██████▋   | 1.76G/2.61G [00:24<00:07, 115MB/s] 68%|██████▊   | 1.77G/2.61G [00:24<00:07, 115MB/s] 68%|██████▊   | 1.78G/2.61G [00:24<00:07, 116MB/s] 69%|██████▊   | 1.79G/2.61G [00:24<00:07, 111MB/s] 69%|██████▉   | 1.80G/2.61G [00:24<00:07, 112MB/s] 70%|██████▉   | 1.82G/2.61G [00:24<00:06, 114MB/s] 70%|██████▉   | 1.83G/2.61G [00:24<00:06, 115MB/s] 70%|███████   | 1.84G/2.61G [00:25<00:06, 115MB/s] 71%|███████   | 1.85G/2.61G [00:25<00:06, 114MB/s] 71%|███████▏  | 1.86G/2.61G [00:25<00:06, 114MB/s] 72%|███████▏  | 1.87G/2.61G [00:25<00:06, 116MB/s] 72%|███████▏  | 1.89G/2.61G [00:25<00:06, 116MB/s] 73%|███████▎  | 1.90G/2.61G [00:25<00:06, 116MB/s] 73%|███████▎  | 1.91G/2.61G [00:25<00:06, 116MB/s] 74%|███████▎  | 1.92G/2.61G [00:25<00:05, 117MB/s] 74%|███████▍  | 1.94G/2.61G [00:25<00:05, 117MB/s] 75%|███████▍  | 1.95G/2.61G [00:25<00:05, 117MB/s] 75%|███████▌  | 1.96G/2.61G [00:26<00:05, 111MB/s] 75%|███████▌  | 1.97G/2.61G [00:26<00:05, 113MB/s] 76%|███████▌  | 1.98G/2.61G [00:26<00:05, 114MB/s] 76%|███████▋  | 2.00G/2.61G [00:26<00:05, 115MB/s] 77%|███████▋  | 2.01G/2.61G [00:26<00:05, 116MB/s] 77%|███████▋  | 2.02G/2.61G [00:26<00:06, 95.6MB/s] 78%|███████▊  | 2.03G/2.61G [00:26<00:05, 101MB/s]  78%|███████▊  | 2.04G/2.61G [00:26<00:05, 106MB/s] 79%|███████▊  | 2.06G/2.61G [00:27<00:05, 109MB/s] 79%|███████▉  | 2.07G/2.61G [00:27<00:04, 111MB/s] 80%|███████▉  | 2.08G/2.61G [00:27<00:04, 113MB/s] 80%|████████  | 2.09G/2.61G [00:27<00:04, 114MB/s] 81%|████████  | 2.10G/2.61G [00:27<00:04, 115MB/s] 81%|████████  | 2.12G/2.61G [00:27<00:04, 116MB/s] 81%|████████▏ | 2.13G/2.61G [00:27<00:04, 116MB/s] 82%|████████▏ | 2.14G/2.61G [00:27<00:05, 92.5MB/s] 82%|████████▏ | 2.15G/2.61G [00:27<00:05, 82.3MB/s] 83%|████████▎ | 2.16G/2.61G [00:28<00:04, 91.7MB/s] 83%|████████▎ | 2.18G/2.61G [00:28<00:04, 97.9MB/s] 84%|████████▎ | 2.19G/2.61G [00:28<00:04, 102MB/s]  84%|████████▍ | 2.20G/2.61G [00:28<00:04, 85.0MB/s] 85%|████████▍ | 2.21G/2.61G [00:28<00:04, 92.8MB/s] 85%|████████▌ | 2.22G/2.61G [00:28<00:03, 99.1MB/s] 86%|████████▌ | 2.23G/2.61G [00:28<00:03, 104MB/s]  86%|████████▌ | 2.25G/2.61G [00:28<00:03, 102MB/s] 86%|████████▋ | 2.26G/2.61G [00:29<00:03, 97.5MB/s] 87%|████████▋ | 2.27G/2.61G [00:29<00:03, 102MB/s]  87%|████████▋ | 2.28G/2.61G [00:29<00:03, 102MB/s] 88%|████████▊ | 2.29G/2.61G [00:29<00:04, 79.8MB/s] 88%|████████▊ | 2.30G/2.61G [00:29<00:04, 72.6MB/s] 88%|████████▊ | 2.31G/2.61G [00:29<00:03, 82.3MB/s] 89%|████████▉ | 2.32G/2.61G [00:29<00:03, 83.1MB/s] 89%|████████▉ | 2.33G/2.61G [00:29<00:03, 90.7MB/s] 90%|████████▉ | 2.34G/2.61G [00:30<00:02, 97.9MB/s] 90%|█████████ | 2.35G/2.61G [00:30<00:02, 100MB/s]  91%|█████████ | 2.37G/2.61G [00:30<00:02, 105MB/s] 91%|█████████ | 2.38G/2.61G [00:30<00:02, 109MB/s] 92%|█████████▏| 2.39G/2.61G [00:30<00:02, 85.5MB/s] 92%|█████████▏| 2.40G/2.61G [00:30<00:02, 84.7MB/s] 92%|█████████▏| 2.41G/2.61G [00:30<00:02, 92.7MB/s] 93%|█████████▎| 2.42G/2.61G [00:31<00:02, 69.2MB/s] 93%|█████████▎| 2.43G/2.61G [00:31<00:02, 66.6MB/s] 93%|█████████▎| 2.44G/2.61G [00:31<00:02, 58.8MB/s] 94%|█████████▎| 2.45G/2.61G [00:31<00:02, 59.7MB/s] 94%|█████████▍| 2.45G/2.61G [00:31<00:03, 52.5MB/s] 94%|█████████▍| 2.46G/2.61G [00:31<00:03, 49.9MB/s] 95%|█████████▍| 2.47G/2.61G [00:31<00:02, 61.8MB/s] 95%|█████████▍| 2.48G/2.61G [00:32<00:02, 48.6MB/s] 95%|█████████▌| 2.49G/2.61G [00:32<00:01, 63.1MB/s] 96%|█████████▌| 2.50G/2.61G [00:32<00:02, 51.4MB/s] 96%|█████████▌| 2.51G/2.61G [00:32<00:01, 64.9MB/s] 96%|█████████▋| 2.52G/2.61G [00:32<00:01, 59.3MB/s] 97%|█████████▋| 2.53G/2.61G [00:32<00:01, 58.6MB/s] 97%|█████████▋| 2.53G/2.61G [00:33<00:01, 55.8MB/s] 97%|█████████▋| 2.54G/2.61G [00:33<00:01, 56.6MB/s] 98%|█████████▊| 2.55G/2.61G [00:33<00:00, 62.5MB/s] 98%|█████████▊| 2.56G/2.61G [00:33<00:00, 56.5MB/s] 98%|█████████▊| 2.57G/2.61G [00:33<00:00, 69.1MB/s] 99%|█████████▊| 2.58G/2.61G [00:33<00:00, 58.8MB/s] 99%|█████████▉| 2.59G/2.61G [00:33<00:00, 71.8MB/s]100%|█████████▉| 2.60G/2.61G [00:34<00:00, 61.4MB/s]100%|█████████▉| 2.61G/2.61G [00:34<00:00, 55.7MB/s]100%|██████████| 2.61G/2.61G [00:34<00:00, 76.2MB/s]
/tmp2/irisqiu0106/miniconda3/envs/CVPDL/lib/python3.7/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/tmp2/irisqiu0106/CVPDL-HW1/DINO/models/dino/position_encoding.py:95: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  dim_tx = self.temperatureW ** (2 * (dim_tx // 2) / self.num_pos_feats)
/tmp2/irisqiu0106/CVPDL-HW1/DINO/models/dino/position_encoding.py:99: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  dim_ty = self.temperatureH ** (2 * (dim_ty // 2) / self.num_pos_feats)
/tmp2/irisqiu0106/CVPDL-HW1/DINO/models/dino/utils.py:143: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  dim_t = 10000 ** (2 * (dim_t // 2) / 128)
/tmp2/irisqiu0106/CVPDL-HW1/DINO/models/dino/dino.py:512: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  t = torch.range(0, len(targets[i]['labels']) - 1).long().cuda()
/tmp2/irisqiu0106/miniconda3/envs/CVPDL/lib/python3.7/site-packages/torch/utils/checkpoint.py:25: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
/tmp2/irisqiu0106/CVPDL-HW1/DINO/models/dino/dino.py:664: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_boxes = topk_indexes // out_logits.shape[2]
